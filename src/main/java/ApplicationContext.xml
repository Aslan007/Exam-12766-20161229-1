<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 开启注解扫描 -->
	<context:component-scan base-package="lx" />
	<!-- 开启AOP的注解 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 注入属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.name}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
	</bean>

	<!-- 配置mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包的路径，如果需要扫描多个包，中间使用半角 逗号隔开 -->
		<property name="basePackage" value="test.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>



	<!--tranction========== 事务管理器 -->
	<!-- 对mybatis操作数据事务控制，spring使用jdbc的事务控制类 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源dataSource在applicationContex-dao.xml中配置了 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* test.service.impl.*.*(..))" />
	</aop:config>

	<!-- 配置AOP，处理每次调用serVice所用时间 -->
 	<!-- <aop:config>
		<aop:pointcut expression="execution(* test.service.impl.*.*(..))"
			id="pointcut1" />
		<aop:aspect ref="countTime">
			 <aop:around method="count" pointcut-ref="pointcut1" /> -->
			<!--<aop:before method="before" pointcut-ref="pointcut1" />
			<aop:before method="after" pointcut-ref="pointcut1" /> -->
	<!-- 	</aop:aspect>
	</aop:config>
 -->
	<!--service================== -->
	<bean id="filmService" class="lx.service.impl.FilmServiceImpl"></bean>
	<bean id="film" class="lx.po.Film"></bean>
	
	<!-- <bean id="testUserMapper" class="test.mapper.TestUserMapper"></bean>
	<bean id="testUserInfoMapper" class="test.mapper.TestUserInfoMapper"></bean> -->

</beans>